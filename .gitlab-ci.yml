image: python:3

stages:
  - build
  - test
  - publish

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

cache:
  paths:
    - .pip-cache/

before_script:
  - python --version
  - python -m pip install --upgrade pip build twine id

build:
  stage: build
  script:
    - python -m build
  artifacts:
    paths:
      - dist/

test:
  stage: test
  script:
    - pip install dist/*.whl
    - python -m unittest -b
    - python -m twine check dist/*

publish:
  stage: publish
  id_tokens:
    PYPI_ID_TOKEN:
      # aud: testpypi
      aud: pypi
  script:
    # Install dependencies
    - apt-get update && apt-get install -y jq
    # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI API token
    # - server="https://test.pypi.org"
    - server="https://pypi.org"
    - oidc_token=$(python -m id PYPI)
    - resp=$(curl -X POST ${server}/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")
    # Upload to PyPI authenticating via the newly-minted token
    # - twine upload --verbose --repository testpypi -u __token__ -p "$api_token" dist/*
    - twine upload -u __token__ -p "$api_token" dist/*
  rules:
    - if: $CI_COMMIT_TAG
